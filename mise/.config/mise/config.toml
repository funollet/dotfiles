[alias]
kubectx = "ubi:ahmetb/kubectx"
kubens = "ubi:ahmetb/kubectx"
ambr = "ubi:dalance/amber"
ambs = "ubi:dalance/amber"
keymapp = "ubi:custom/keymapp"

[tools]
act = "latest"
uv = "latest"
actionlint = "latest"
terraform = "latest"
sops = "latest"
lazygit = "latest"
pre-commit = "latest"
istioctl = "1.19.3"
argocd = "latest"
kind = "latest"
usage = "latest"
github-cli = "latest"
packer = "latest"
k9s = "latest"
tflint = "latest"
helm = "latest"
kustomize = "latest"
watchexec = "latest"
fx = "latest"
grex = "latest"
peco = "latest"
gum = "latest"
ruff = "latest"
python = "3.10"
awscli = "latest"
kubectl = "latest"
gcloud = "latest"

"cargo:andrewshadura/inputplug" = "latest"

"pipx:pex" = "latest"
"pipx:csb43" = "latest"
"pipx:termdown" = "latest"
"pipx:yamlfix" = "latest"
"pipx:posting" = "latest"
"pipx:copier" = "latest"
"pipx:vint" = "latest"
"pipx:hostsed" = "latest"

ambs = { version = "latest", exe = "ambs", matching_regex = "x86_64-lnx" }
ambr = { version = "latest", exe = "ambr", matching_regex = "x86_64-lnx" }

kubectx = { version = "latest", matching = "kubectx" }
kubens = { version = "latest", matching = "kubens", exe = "kubens" }
"ubi:docker/buildx" = { version = "latest", postinstall = "mkdir -p ~/.docker/cli-plugins/ && ln -s ~/.local/share/mise/installs/ubi-docker-buildx/latest/buildx ~/.docker/cli-plugins/docker-buildx" }
"ubi:kubernetes-sigs/cloud-provider-kind" = "latest"
"ubi:docopt/docopts" = { version = "latest", postinstall = "wget https://raw.githubusercontent.com/docopt/docopts/master/docopts.sh -O ~/.local/bin/docopts.sh" }
"ubi:fiatjaf/jiq" = "latest"
"ubi:kmonad/kmonad" = "latest"
"ubi:txn2/kubefwd" = "latest"
"ubi:rsteube/lazycomplete" = "latest"
"ubi:gokcehan/lf" = "latest"
"ubi:ericchiang/pup" = "latest"
"ubi:sqshq/sampler" = "latest"
"ubi:joehillen/sysz" = "latest"
"ubi:houseabsolute/ubi" = "latest"
"ubi:akavel/up"= { version = "latest", matching_regex = "^up$" }
"ubi:zsa/wally-cli" = "2.0.0-linux"
helm-diff = "latest"
kubectl-convert = "latest"
"ubi:jesseduffield/lazydocker" = "latest"

[settings]
idiomatic_version_file_enable_tools = ["python"]
