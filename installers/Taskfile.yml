# github.com/go-task/task

version: '2'

vars:
  # List of packages to be installed.
  base_distro: |
    python-paramiko python-yaml python-jinja2 python-simplejson python-pip
    yum-cron python3-firewall createrepo snapd
  devopstools: |
    vim-X11 vim-enhanced automake gcc gcc-c++ rpm-build subversion
    # development tools
    mercurial git hub git-svn gitk sqlite arduino jq ShellCheck
    direnv stow
    # vim / syntastic
    nodejs-js-yaml rubygem-puppet-lint yamllint
    # Python development.
    python-devel python-crypto
    python-mock 
    python3-ipython python3-black python3-pytest python3-flake8 python3-jedi
    python-psutil pydot httpie python-py python-docopt
    python-click python-pip python-sh
    python3-requests
    # Ruby development.
    ruby ruby-devel rubygems rubygem-bundler rubygem-rake rubygem-wirb 
    rubygem-pry rubygem-pry-doc rubygem-rspec rubygem-rspec-mocks 
    rubygem-rspec-mocks-doc
    # Golang devel.
    golang
    # Nagios plugins development.
    pynag pynag-examples
    #
    # Ops
    moby-engine
    par pssh pdsh pdsh-mod-dshgroup
    mysql percona-toolkit gnuplot httpd-tools
    #rubygem-rails      # puppet storedconfigs requirement
    puppet rubygem-puppet-lint rubygem-puppet-lint-doc pass
    #
    # libvirt-bin service must not be run: installs and launches dnsmasq configures virt0 interface.
    #libvirt-bin
    virt-manager
    # dependencies for building aws-google-auth
    libusb-devel systemd-devel
  unix_essentials: |
    ack fzf htop dstat tree rsync wget curl screen units vim pv lsof strace colordiff
    the_silver_searcher fd-find ncdu bat
  workstation: |
    kernel-headers kernel-devel dkms
    # Xwindows
    kernel-modules-extra joystick-support wmctrl xdotool qgnomeplatform
    xorg-x11-xkb-extras xorg-x11-xkb-utils xkbset xcape
    # Command-line.
    aspell aspell-ca aspell-en aspell-es
    hunspell hunspell-ca hunspell-en-US hunspell-es-ES
    mythes mythes-ca mythes-en mythes-es
    hyphen hyphen-ca hyphen-en hyphen-es
    autocorr-ca autocorr-en autocorr-es
    pandoc unison240-text moreutils xclip tmux lastpass-cli
    inotify-tools tiptop ranger w3m w3m-img vpnc timew imapfilter
    java-1.8.0-openjdk icedtea-web 
    # GUI apps.
    pidgin pidgin-libnotify pidgin-guifications
    keepassx
    freemind calibre inkscape firefox
    libreoffice timeline youtube-dl Zim
    levien-inconsolata-fonts
    zathura speedcrunch homebank flameshot
    # Graphics
    gimp ufraw-gimp gimp-wavelet-denoise-plugin gimp-separate+
    gimp-paint-studio gimp-normalmap gimp-help GREYCstoration-gimp
    gimp-resynthesizer gimp-lqr-plugin gimp-high-pass-filter gimp-elsamuko
    gimp-data-extras
    digikam kf5-kipi-plugins darktable
    # Multimedia
    clementine audacity pavucontrol ffmpeg cantata
    qjackctl jack-audio-connection-kit alsa-plugins-jack sooperlooper
    vlc                # require: RPMfusion repositories
    # joystick
    antimicro linuxconsoletools
    dropbox google-chrome-stable
    # from local.repo
    #aws-shell sublime-text rubygem-watson
    # 
    # sigil                 #needs repo ppa:ikuya-fruitsbasket
  codecs: |
    # require: rpmfusion-free
    xine-lib-extras xine-lib-extras-freeworld k3b-extras-freeworld gstreamer1-libav
    gstreamer1-plugins-good gstreamer1-plugins-ugly gstreamer1-plugins-bad-free
    gstreamer-ffmpeg gstreamer-plugins-ugly
    gstreamer-plugins-bad ffmpeg
    #   not found: gstreamer-plugins-good gstreamer-plugins-bad-free
    # require: rpmfusion-non-free
    gstreamer-plugins-bad-nonfree
  nvidia_hardware: |
    #alternative: - kmod-nvidia-PAE 
    #alternative: - xorg-x11-drv-nouveau
    akmod-nvidia-304xx xorg-x11-drv-nvidia-304xx xorg-x11-drv-nvidia-cuda
    kernel-devel
    # hardware video acceleration
    vdpauinfo libva-vdpau-driver libva-utils
  kde: |
    xdg-desktop-portal-kde plasma-browser-integration
  awesomewm: |
    awesome awesome-doc vicious scrot network-manager-applet
    light xautolock i3lock
    feh lximage-qt arandr lxappearance lxqt-powermanagement screengrab
    # plank compton
  i3:
    i3 python3-i3ipc i3lock xsecurelock xss-lock
    dunst light nitrogen rofi network-manager-applet NetworkManager-tui
    polybar unifont-fonts
  lxqt: |
    @lxqt
  vagrant: |
    vagrant vagrant-doc vagrant-lxc vagrant-lxc-doc vagrant-libvirt
    vagrant-libvirt-doc vagrant-cachier vagrant-cachier-doc
    vagrant-hostmanager vagrant-hostmanager-doc
    lxc                 # vagrant-lxc requirement
    lxc-doc             # vagrant-lxc requirement
    redir               # vagrant-lxc requirement
    VirtualBox kmod-VirtualBox



tasks:

  ################################################## 
  # Helpers to install packages.

  dnf:
    cmds:
      - sudo dnf install -y {{ regexReplaceAll "#.*" .pkgs "" | catLines }}


  cleanup:
    cmds:
      - sudo dnf remove {{ regexReplaceAll "#.*" .pkgs "" | catLines }}
    vars:
      pkgs: |
       amarok akonadi banshee gbrainy awscli unison240-gtk
       python2-pytest python2-invoke
       docker-ce podman
       python3-pika python3-virtualenvwrapper
    ignore_error: true





  ################################################## 
  #
  
  repo_rpmfusion:
    # Installs RPMfusion repos.
    cmds:
      - sudo dnf install -y https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{.release}}.noarch.rpm
        https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{.release}}.noarch.rpm
    vars:
      release:
        sh: rpm -E %fedora
    status:
      - rpm -q rpmfusion-free-release-{{.release}}
      - rpm -q rpmfusion-nonfree-release-{{.release}}

  repo_fedora_thirdparty:
    # Install Fedora Third Party repos.
    cmds:
      - sudo dnf install -y fedora-workstation-repositories
      - sudo dnf config-manager --set-enabled google-chrome
    status:
      - rpm -q fedora-workstation-repositories

  repo_percona:
    cmds:
      - sudo dnf install http://www.percona.com/downloads/percona-release/redhat/0.1-6/percona-release-0.1-6.noarch.rpm
      - sudo sed -i 's/$releasever/6/g' /etc/yum.repos.d/percona-release.repo
    status:
      - rpm -q percona-release

  repos:
    # Install all repositories.
    deps: [ repo_rpmfusion, repo_fedora_thirdparty, repo_percona ]




  ################################################## 
  #
  
  pkg:
    desc: Install all the packages to configure a Fedora workstation.
    deps: [cleanup, repos]
    cmds:
      - task: dnf
        vars: { pkgs: "{{.devopstools}} {{.base_distro}} {{.unix_essentials}} {{.workstation}} {{.codecs}} {{.kde}} {{.awesomewm}} {{.i3}} {{.lxqt}} {{.vagrant}}" }

  nvidia:
    #desc: Install modules and utils for Nvidia.
    deps: [repos]
    cmds:
      - task: dnf
        vars: { pkgs: "{{.nvidia_hardware}}" }






  ################################################## 
  #
  non-pkg:
    desc: Install not-packaged software.
    deps:
      - awless
      # - awscli
      - fonts-powerline
      - fonts-hack
      - fpm
      - jiq
      - pet
      - sheet
      - vim_vundle

  awless:
    #desc: Install awless.
    dir: /tmp
    cmds:
      - wget -nv -c {{.URL}}
      - tar -xzf awless*tar.gz
      - sudo install awless /usr/local/bin/
    status:
      - which awless
    vars:
      VERSION: 0.1.11
      URL: https://github.com/wallix/awless/releases/download/v{{.VERSION}}/awless-linux-amd64.tar.gz


  # awscli:
  #   dir: /tmp
  #     - curl -s -o "awscliv2.zip" {{.URL}}
  #     - unzip awscliv2.zip
  #     - sudo ./aws/install
  #   status:
  #     - which aws
  #   vars:
  #     URL: https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip


  docker-machine-driver-kvm2:
    #desc: Install docker-machine-driver-kvm2.
    dir: /tmp
    cmds:
      - wget -nv -c {{.URL}} -O /tmp/docker-machine-driver-kvm2
      - sudo install -m 755 docker-machine-driver-kvm2 /usr/local/bin/
    status:
      - test -f /usr/local/bin/docker-machine-driver-kvm2
    vars:
      URL: https://storage.googleapis.com/minikube/releases/latest/docker-machine-driver-kvm2



  fonts-powerline:
    #desc: Install fonts for Powerline on user's home.
    cmds:
      - cd ~/.fonts ; git clone https://github.com/Lokaltog/powerline-fonts
      - fc-cache -vf ~/.fonts
    status:
      - test -d ~/.fonts/powerline-fonts


  fonts-hack:
    #desc: Install font Hack from https://github.com/ryanoasis/nerd-fonts
    dir: /tmp
    cmds:
      - wget -nv -c {{.URL}}
      - test -d ~/.fonts/Hack && rm -r ~/.fonts/Hack || true
      - mkdir -p ~/.local/share/fonts/Hack
      - unzip -d ~/.local/share/fonts/Hack Hack.zip
      - fc-cache -fv
    status:
      - test -d ~/.local/share/fonts/Hack
    vars:
      URL: https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Hack.zip


  fpm:
    #desc: Install 'fpm' at ~/.gem/
    cmds:
      - sudo dnf install -y rubygem-ffi rubygem-childprocess rubygem-backports ruby-devel rpm-build
      - gem install --user-install fpm
    status:
      - which fpm > /dev/null
      # Fetching: cabin-0.6.1.gem (100%)
      # Fetching: backports-3.6.0.gem (100%)
      # Fetching: arr-pm-0.0.9.gem (100%)
      # Fetching: clamp-0.6.3.gem (100%)
      # Fetching: ffi-1.9.3.gem (100%)

  jiq:
    #desc: Install jiq. https://github.com/fiatjaf/jiq
    dir: /usr/local/bin
    cmds:
      - go get github.com/fiatjaf/jiq/cmd/jiq
      - sudo cp ~/code/go/bin/jiq /usr/local/bin
    status:
      - test -f /usr/local/bin/jiq

  pet:
    #desc: "Install pet. https://github.com/knqyf263/pet"
    dir: /tmp
    cmds:
      - wget -nv -c "{{.URL}}" -O pet.tar.gz
      - tar -xzf pet.tar.gz
      - sudo install -m 0755 pet /usr/local/bin
    status:
      - test -f /usr/local/bin/pet
    vars:
      VERSION: 0.3.2
      URL: "https://github.com/knqyf263/pet/releases/download/v{{.VERSION}}/pet_{{.VERSION}}_linux_amd64.tar.gz"


  sheet:
    #desc: Install 'sheet' at ~/.gem/
    cmds:
      # - sudo dnf install -y rubygem-ffi rubygem-childprocess rubygem-backports ruby-devel rpm-build
      - gem install --user-install sheet
    status:
      - which sheet > /dev/null


  vim_vundle:
    #desc: Clone Vim Vundle to your ~/.vim/.
    cmds:
      - git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim
    status:
      - test -d ~/.vim/bundle/Vundle.vim


  brew:
    desc: Install software with brew
    cmds:
      - brew bundle

  ################################################## 
  #
  pipx:
    desc: "Use pipx to install python packages on venvs"
    cmds:
      - task: pipx-binary
      - task: pipx-packages

  pipx-binary:
    cmds:
      - pip3 install --user pipx
    status:
      - which pipx

  pipx-packages:
    deps:
      - { task: pipx-install, vars: { pkg: "aws-google-auth[u2f]" } }
        # build dependencies: libusb-devel systemd-devel
      - { task: pipx-install, vars: { pkg: "beets" } }
      - { task: pipx-install, vars: { pkg: "cfn-lint" } }
      - { task: pipx-install, vars: { pkg: "ec2instanceconnectcli" } }
      - { task: pipx-install, vars: { pkg: "pew" } }
      - { task: pipx-install, vars: { pkg: "pex" } }
      - { task: pipx-install, vars: { pkg: "pipenv" } }
      - { task: pipx-install, vars: { pkg: "pipenv-pipes" } }

  pipx-install:
    # Helper to install packages using pipx
    cmds: 
      - pipx install {{ .pkg }} {{ .args|default "" }}
    status:
      - pipx list | grep -q {{ .pkg }}


  ################################################## 
  #

  config:
    desc: Post-install config tasks.
    cmds:
        # Set folder to store Virtualbox machines
      - VBoxManage setproperty machinefolder /home/jordif/spool/VirtualBox_VMs
      - sudo usermod -aG docker $(whoami)

  config-firefox:
    desc: Minor Firefox tweaks.
    cmds:
      - test -f ~/.gtkrc-2.0 || touch ~/.gtkrc-2.0
      - sed -i 's/# *gtk-key-theme-name =/gtk-key-theme-name =/' ~/.gtkrc-2.0
      - grep -q 'gtk-key-theme-name =' ~/.gtkrc-2.0 
        || echo 'gtk-key-theme-name = "Emacs"' >> ~/.gtkrc-2.0
        # Firefox uses kde file manager: requires xdg-desktop-portal-kde
        # Set the app launcher command to: GTK_USE_PORTAL=1 firefox %u

  config-kde:
    desc: KDE tweaks.
    cmds:
        # https://userbase.kde.org/Plasma/Tips
        # 'Meta' opens krunner
      # - kwriteconfig5 --file ~/.config/kwinrc --group ModifierOnlyShortcuts --key Meta "org.kde.kglobalaccel,/component/krunner,org.kde.kglobalaccel.Component,invokeShortcut,run command"
      # - qdbus org.kde.KWin /KWin reconfigure
        #
        # 'Meta' does nothing by itself
      - kwriteconfig5 --file ~/.config/kwinrc --group ModifierOnlyShortcuts --key Meta ""
      - qdbus org.kde.KWin /KWin reconfigure


  ################################################## 
  #

  flatpak:
    desc: Install software with flatpak.
    cmds:
      - flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
      - flatpak install --noninteractive flathub com.spotify.Client
      - flatpak install --noninteractive flathub com.skype.Client
      - flatpak install --noninteractive flathub us.zoom.Zoom
      - flatpak install --noninteractive flathub org.telegram.desktop
      - flatpak install --noninteractive flathub com.slack.Slack

