# https://github.com/casey/just


# Run ansible on the local workstation.
ansible *args:
    ansible-playbook -v -c local -i localhost, install.yml {{args}}
 

# Remove an executable, if found.
rmbin cmd:
    sudo rm `which {{cmd}}`


# Install non-packaged software.
install: _awless _eksctl _jiq _render _terraform _up _fonts-powerline _fonts-hack _vim-vundle

_awless version="0.1.11":
    fetchbin.sh awless \
        https://github.com/wallix/awless/releases/download/v{{version}}/awless-linux-amd64.tar.gz
_eksctl:
    fetchbin.sh eksctl "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz"
_jiq:
    fetchbin.sh jiq https://github.com/fiatjaf/jiq/releases/download/0.7.1/jiq_linux_amd64
_kmonad:
    fetchbin.sh kmonad \
        https://github.com/david-janssen/kmonad/releases/download/0.4.1/kmonad-0.4.1-linux
_render:
    fetchbin.sh render \
        https://github.com/VirtusLab/render/releases/download/v0.2.0/render-linux-amd64
_terraform version="1.0.5":
    fetchbin.sh terraform \
      https://releases.hashicorp.com/terraform/{{version}}/terraform_{{version}}_linux_amd64.zip
_up:
    fetchbin.sh up https://github.com/akavel/up/releases/download/v0.4/up

_sysz:
    # https://github.com/joehillen/sysz
    wget -O ~/.local/bin/sysz https://raw.githubusercontent.com/joehillen/sysz/master/sysz
    chmod +x ~/.local/bin/sysz


# Install fonts for Powerline on user's home.
_fonts-powerline:
    #!/usr/bin/env bash
    set -euxo pipefail
    test -d ~/.fonts/powerline-fonts && exit
    cd ~/.fonts ; git clone https://github.com/Lokaltog/powerline-fonts
    fc-cache -vf ~/.fonts


# Install font Hack from https://github.com/ryanoasis/nerd-fonts
_fonts-hack version="2.1.0":
    #!/usr/bin/env bash
    set -euxo pipefail
    test -d ~/.local/share/fonts/Hack && exit
    cd /tmp
    wget -nv -c "https://github.com/ryanoasis/nerd-fonts/releases/download/v{{version}}/Hack.zip"
    test -d ~/.fonts/Hack && rm -r ~/.fonts/Hack || true
    mkdir -p ~/.local/share/fonts/Hack
    unzip -d ~/.local/share/fonts/Hack Hack.zip
    fc-cache -fv


# Clone Vim Vundle to your ~/.vim/.
_vim-vundle:
    #!/usr/bin/env bash
    set -euxo pipefail
    test -d ~/.vim/bundle/Vundle.vim && exit
    git clone https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim






# Fedora update.
update:
    sudo dnf update --downloadonly -y
    sudo dnf update -y

# Fedora upgrade, step 0.
upgrade0:
    sudo dnf install dnf-plugin-system-upgrade
    sudo dnf upgrade --refresh
    mkdir -p /mnt/sdb/system-upgrade
    @echo Reboot your computer

# Fedora upgrade, step 1.
upgrade1 version="`expr $(lsb_release -r | cut -f2) + 1`":
    # https://docs.fedoraproject.org/en-US/quick-docs/dnf-system-upgrade/
    sudo dnf system-upgrade download -y --releasever={{version}}

# Fedora upgrade, step 2.
upgrade2:
    sudo dnf system-upgrade reboot


# Reclaim unused space.
reclaim:
    sudo dnf clean packages
    sudo dnf system-ugprade clean
    flatpak uninstall --unused
    flatpak uninstall --delete-data
    sudo journalctl --vacuum-time=10d


# Tidy-up system-wide.
fight-entropy:
    @echo Modules from older releases
    -ls -1d /lib/modules/* | grep -v ".fc`lsb_release -sr`."
    @echo

    @echo Packages with broken dependencies
    sudo dnf repoquery --unsatisfied
    @echo

    @echo Packages with multiple versions installed
    sudo dnf repoquery --duplicates
    @echo

    @echo Possibly unused packages
    sudo dnf repoquery --extras --exclude=kernel,kernel-\*,kmod-\* | grep -v ".fc`lsb_release -sr`." 
    @echo

    #@echo Broken symlinks
    #sudo symlinks -r /usr | grep dangling
    #@echo


# Delete everything installed by pipx.
pipx-cleanup:
    rm -r ~/.local/pipx
    symlinks -d ~/.local/bin | grep -v absolute



################################################## 
#

# Post-install config tasks.
tweak: _tweak-vbox _tweak-firefox _tweak-kde

_tweak-vbox:
    # Set folder to store Virtualbox machines
    VBoxManage setproperty machinefolder /home/jordif/spool/VirtualBox_VMs

# Minor Firefox tweaks.
_tweak-firefox:
    test -f ~/.gtkrc-2.0 || touch ~/.gtkrc-2.0
    sed -i 's/# *gtk-key-theme-name =/gtk-key-theme-name =/' ~/.gtkrc-2.0
    grep -q 'gtk-key-theme-name =' ~/.gtkrc-2.0 \
    || echo 'gtk-key-theme-name = "Emacs"' >> ~/.gtkrc-2.0
    # Firefox uses kde file manager: requires xdg-desktop-portal-kde
    # Set the app launcher command to: GTK_USE_PORTAL=1 firefox %u

# KDE tweaks.
_tweak-kde:
    # https://userbase.kde.org/Plasma/Tips
    # 'Meta' opens krunner
    # kwriteconfig5 --file ~/.config/kwinrc --group ModifierOnlyShortcuts --key Meta "org.kde.kglobalaccel,/component/krunner,org.kde.kglobalaccel.Component,invokeShortcut,run command"
    # qdbus org.kde.KWin /KWin reconfigure
    #
    # 'Meta' does nothing by itself
    kwriteconfig5 --file ~/.config/kwinrc --group ModifierOnlyShortcuts --key Meta ""
    qdbus org.kde.KWin /KWin reconfigure

config-x11:
    sudo install -m 0644 files/usr/share/X11/xkb/rules/base.lst /usr/share/X11/xkb/rules/
    sudo install -m 0644 files/usr/share/X11/xkb/symbols/notanumpad /usr/share/X11/xkb/symbols/
    sudo localectl set-x11-keymap us,notanumpad pc105 "" \
        "grp:caps_toggle,compose:ralt,ctrl:menu_rctrl,terminate:ctrl_alt_bksp"
